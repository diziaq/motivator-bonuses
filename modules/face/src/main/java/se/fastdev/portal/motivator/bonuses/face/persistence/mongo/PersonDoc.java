package se.fastdev.portal.motivator.bonuses.face.persistence.mongo;

import java.util.List;
import java.util.Objects;
import java.util.UUID;
import org.bson.types.ObjectId;
import org.springframework.data.mongodb.core.mapping.Document;
import se.fastdev.portal.motivator.bonuses.core.models.Person;
import se.fastdev.portal.motivator.bonuses.toolbox.conversion.ListsUtil;

@Document(collection = "persons")
public final class PersonDoc {

  // autogenerated
  public ObjectId id;

  public String uuid;

  public PersonAttributesDoc attributes;

  public ExpenseProfileDoc activeExpenseProfile;

  public List<ExpenseProfileDoc> expenseProfilesHistory;

  public PersonDoc() {
    // for mongo deserializer
  }

  public PersonDoc(ObjectId id, PersonDoc body) {
    this(body.uuid, body.attributes, body.activeExpenseProfile, body.expenseProfilesHistory);
    this.id = id;
  }

  private PersonDoc(
      String uuid,
      PersonAttributesDoc attributes,
      ExpenseProfileDoc activeExpenseProfile,
      List<ExpenseProfileDoc> expenseProfilesHistory
  ) {
    this.uuid = Objects.requireNonNull(uuid);
    this.attributes = attributes;
    this.activeExpenseProfile = activeExpenseProfile;
    this.expenseProfilesHistory = expenseProfilesHistory;
  }

  public Person toModel() {
    return new Person(
        UUID.fromString(uuid),
        attributes.toModel(),
        activeExpenseProfile.toModel(),
        ListsUtil.translate(expenseProfilesHistory, ExpenseProfileDoc::toModel)
    );
  }

  //TODO: move to converter. inject converter into storage
  public static PersonDoc from(Person person) {
    return new PersonDoc(
        person.getUuid().toString(),
        PersonAttributesDoc.from(person.getAttributes()),
        ExpenseProfileDoc.from(person.getActiveExpenseProfile()),
        ListsUtil.translate(person.getExpenseProfilesHistory(), ExpenseProfileDoc::from)
    );
  }

  public static PersonDoc examplePortalId(String portalId) {
    final var attributes = new PersonAttributesDoc(portalId, null, null, null);
    final var doc = new PersonDoc();
    doc.attributes = attributes;

    return doc;
  }

  public static PersonDoc exampleUuid(String uuid) {
    return new PersonDoc(uuid, null, null, null);
  }
}
